deepdive {

  db.default {
    driver: "org.postgresql.Driver"
    url: "jdbc:postgresql://"${PGHOST}":"${PGPORT}"/"${DBNAME}
    user: ${PGUSER}
    password: ${PGPASSWORD}
  }

  # Put your variables here
  schema.variables {
    scholarships.is_scholarship: Boolean
  }

  # Pipelines
  pipeline.run: "nonlp"
  pipeline.pipelines.nonlp: ["f_is_schol_features"]

  # Put your extractors here
  extraction.extractors {
    
    ext_schol.input: "SELECT * FROM scholarships"
    ext_schol.output_relation: "schol_features"
    ext_schol.udf: ${APP_HOME}"/scripts/extract_dictionary_mentions.py"
    ext_schol.before: ${APP_HOME}"/udf/before_schol_features.sh"
    ext_schol.parallelism: 6
    ext_schol.input_batch_size: 50

  }

  # Put your inference rules here
  inference.factors {
  f_is_schol_features.input_query: """
    SELECT scholarships.id AS "scholarships.id", scholarships.is_scholarship AS "scholarships.is_scholarship", feature 
    FROM scholarships, schol_features
    WHERE scholarships.id = schol_features.text_id"""
  f_is_schol_features.function: "IsTrue(scholarships.is_scholarship)"
  f_is_schol_features.weight: "?(feature)"
}

  # Specify a holdout fraction
  calibration.holdout_fraction: 0.20
  #sampler.sampler_args: "-l 125 -s 1 -i 200 --alpha 0.001"
 
}
